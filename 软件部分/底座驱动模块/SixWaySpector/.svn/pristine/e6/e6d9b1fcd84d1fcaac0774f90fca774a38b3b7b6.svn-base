#include "Communication.h"
#include "infrared.h"


//#include "Base.h"
int pin[9] = { 2, 3, 4, 5, 6, 7, 8, 9 ,A0};

Infrared Infrared(pin);

int direction = A_Forward;
int Offset, Bias, Cross;
char cmd[4] = "0;0";		//通讯所要发送的命令

#define DEBUG

#ifdef DEBUG
#define DBG(message)    Serial.println(message)
#define DBGW(message)    Serial.write(message)
#else
#define DBG(message)
#define DBGW(message)
#endif // DEBUG
void setup()
{
	Wire.begin(Slave_Adress);                // join i2c bus with address 
	Wire.onRequest(requestEvent);			// register event
	Wire.onReceive(receiveEvent);			// register event

	Serial.begin(9600);
	while (!Serial) {
		; // wait for serial port to connect. Needed for native USB port only
	}
	DBG("Start");
	
	//Serial.println("init");
}

void loop()
{
	Infrared.Read_status();									//读取巡线模块状态

	Offset = Infrared.Detect_Offset(direction);			//判断机身偏移情况
	Bias = Infrared.Detect_Bias(direction);
	Cross = Infrared.Detect_Cross();
	if (Cross == true){
		cmd[0] = Status_Done;
	}
	else if (Bias != NoneBias){
		cmd[0] = Status_Bias;
		cmd[2]=Bias;
	}
	else if (Offset!=NoneOffset)
	{
		cmd[0] = Status_Offset;
		cmd[2] = Offset;
	}


	/*巡线模块debug
	if (Serial.available() > 0){
	Serial.readString();
	Serial.println("data update");
	Serial.println(Offset);
	for (int i = 0; i < 8; i++){
	Serial.print(Infrared._pin[i]);
	Serial.print("    ");
	Serial.println(Infrared._status[i]);
	}
	}
	*/
	/* add main program code here */

}

void requestEvent() {
	Wire.write(cmd); // respond with message of 6 bytes
	// as expected by master
}


void receiveEvent(int howMany) {
	while ( Wire.available() > 0) { // loop through all but the last
		direction = Wire.read(); // receive byte as a int
		Serial.print(direction);         // print the character
	}
}